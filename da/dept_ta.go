/******************************************************************************************
 * This file was automatically generated by mingru (https://github.com/mgenware/mingru)
 * Do not edit this file manually, your changes will be overwritten.
 ******************************************************************************************/

package da

import (
	"fmt"

	"github.com/mgenware/mingru-go-lib"
)

// TableTypeDept ...
type TableTypeDept struct {
}

// Dept ...
var Dept = &TableTypeDept{}

// MingruSQLName returns the name of this table.
func (mrTable *TableTypeDept) MingruSQLName() string {
	return "departments"
}

// ------------ Actions ------------

// DeptTableSelectPageResult ...
type DeptTableSelectPageResult struct {
	ID   string
	Name string
}

// SelectPage ...
func (mrTable *TableTypeDept) SelectPage(mrQueryable mingru.Queryable, page int, pageSize int) ([]DeptTableSelectPageResult, bool, error) {
	if page <= 0 {
		err := fmt.Errorf("Invalid page %v", page)
		return nil, false, err
	}
	if pageSize <= 0 {
		err := fmt.Errorf("Invalid page size %v", pageSize)
		return nil, false, err
	}
	limit := pageSize + 1
	offset := (page - 1) * pageSize
	max := pageSize
	rows, err := mrQueryable.Query("SELECT `dept_no`, `dept_name` FROM `departments` ORDER BY `dept_no` LIMIT ? OFFSET ?", limit, offset)
	if err != nil {
		return nil, false, err
	}
	result := make([]DeptTableSelectPageResult, 0, limit)
	itemCounter := 0
	defer rows.Close()
	for rows.Next() {
		itemCounter++
		if itemCounter <= max {
			var item DeptTableSelectPageResult
			err = rows.Scan(&item.ID, &item.Name)
			if err != nil {
				return nil, false, err
			}
			result = append(result, item)
		}
	}
	err = rows.Err()
	if err != nil {
		return nil, false, err
	}
	return result, itemCounter > len(result), nil
}
